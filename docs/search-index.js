var searchIndex = JSON.parse('{\
"basics":{"doc":"","t":[5,0,0,0,0,3,11,11,11,11,12,11,11,12,5,11,11,11,11,8,3,11,11,11,11,11,10,11,12,11,11,11,11,11,11,8,3,8,3,3,8,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["add","concepts","closures","lifetimes","static_and_dynamic_dispatch","User","borrow","borrow_mut","fmt","from","id","into","load","name","sort_abs","try_from","try_into","type_id","vzip","Animal","Cat","borrow","borrow_mut","fmt","from","into","make_noise","make_noise","name","new","to_string","try_from","try_into","type_id","vzip","Amphibious","HoverCraft","LandCapable","SUV","Sedan","WaterCapable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","drive","drive","drive","float","float","from","from","from","into","into","into","road_trip","road_trip_dyn","road_trip_impl","traverse_frozen_lake","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["basics","","basics::concepts","","","basics::concepts::closures","","","","","","","","","","","","","","basics::concepts::lifetimes","","","","","","","","","","","","","","","","basics::concepts::static_and_dynamic_dispatch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Super Trait","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generic function with a where constraint Equivalent to fn …","Dynamic Dispatch with <code>dyn</code> parameter Added cost with fat …","Static Dispatch with <code>impl</code> parameter","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,2,2,2,2,0,0,8,8,8,8,8,15,8,8,8,8,8,8,8,8,0,0,0,0,0,0,11,12,13,11,12,13,14,11,12,16,13,11,12,13,11,12,13,0,0,0,0,11,12,13,11,12,13,11,12,13,11,12,13],"f":[[[1,1],1],0,0,0,0,0,[[]],[[]],[[2,3],4],[[]],0,[[]],[[],[[5,[2]]]],0,[[]],[[],6],[[],6],[[],7],[[]],0,0,[[]],[[]],[[8,3],4],[[]],[[]],[[]],[8],0,[9,8],[[],10],[[],6],[[],6],[[],7],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[11,10],[12,10],[[],10],[13,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[14,10],[[],10],[[],[[5,[10]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[]],[[]],[[]]],"p":[[15,"usize"],[3,"User"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[3,"Cat"],[15,"str"],[3,"String"],[3,"Sedan"],[3,"SUV"],[3,"HoverCraft"],[8,"LandCapable"],[8,"Animal"],[8,"WaterCapable"]]},\
"dynamic_programming":{"doc":"","t":[5,0,0,5,5],"n":["add","subarrays","max_sum_subarray","max_sum_subarray","max_sum_subarray_brute"],"q":["dynamic_programming","","dynamic_programming::subarrays","dynamic_programming::subarrays::max_sum_subarray",""],"d":["","","Brute Force implementation Time: O(n^2) Better version …","",""],"i":[0,0,0,0,0],"f":[[[1,1],1],0,0,[[],[[3,[2]]]],[[],[[3,[2]]]]],"p":[[15,"usize"],[15,"i32"],[3,"Vec"]]},\
"misc":{"doc":"","t":[5],"n":["add"],"q":["misc"],"d":[""],"i":[0],"f":[[[1,1],1]],"p":[[15,"usize"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
